branches:
  - '+([0-9])?(.{+([0-9]),x}).x'
  - master
  - name: beta
    prerelease: true

preset: "conventionalcommits"
tagFormat: "v${version}"
plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/release-notes-generator"
  - "@semantic-release/changelog"
  - "@semantic-release/git"
  - "@semantic-release/github"

verifyConditions:
  - '@semantic-release/git'
  - "@semantic-release/github"
analyzeCommits:
  - path: "@semantic-release/commit-analyzer"
    releaseRules:
    - type: "breaking"
      release: "major"
    - type: "feat"
      release: "minor"
    - type: "fix"
      release: "patch"
    - type: "perf"
      release: "patch"
    - type: "refactor"
      release: "patch"
    - type: "test"
      release: "patch"
    - type: "style"
      release: "patch"
generateNotes:
  - path: "@semantic-release/release-notes-generator"
    writerOpts:
      groupBy: "type"
      commitGroupsSort:
        - "feat"
        - "perf"
        - "fix"
        - "breaking"
      commitsSort: "header"
    types:
    - type: "breaking"
    - section: "Breaking Change"
    - type: "feat"
    - section: "Features"
    # Tracked bug fix with a hotfix branch
    - type: "fix"
    - section: "Bug Fixes"
    # Uninmportent fix (CI testing, etc)
    - type: "chore"
    - hidden: true
    - type: "build"
    - hidden: true
    - type: "docs"
    - hidden: true
    - type: "style"
    - hidden: true
    - type: "refactor"
    - hidden: true
    - type: "perf"
    - hidden: true
    - type: "test"
    - hidden: true
    presetConfig: true
prepare:
  - path: "@semantic-release/git"
    assets: 
      - 'Cargo.toml'
      - 'docs/CHANGELOG.md'
    message: "build(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
  - path: "@semantic-release/changelog"
    changelogFile: "docs/CHANGELOG.md"
publish:
  - path: "@semantic-release/github"
    assets: 'publish/**'

success:
  - "@semantic-release/github"

fail:
  - "@semantic-release/github"