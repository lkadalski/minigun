on:
  workflow_run: 
    workflows: ["build"]
    branches: [master]
    types:
      - completed
  
name: Create Release

env:
  # Could, potentially automatically parse
  # the bin name, but let's do it automatically for now.
  RELEASE_BIN: minigun 

  # Space separated paths to include in the archive.
  # Start relative paths with a dot if you don't want
  # paths to be preserved. Use "/" as a delimiter.
  RELEASE_ADDS: README.md LICENSE


jobs:
  build:
    name: Build release
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            suffix: ''
          - build: windows
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            suffix: '.exe'

    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        default: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release  --target=${{ matrix.target }}
      env:
        CARGO_PROFILE_RELEASE_LTO: true
        CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1

  publish:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v2
      with:
        extra_plugins: |
          @semantic-release/git
          @semantic-release/exec
          @semantic-release/changelog
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}   
    - name: Releasing assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/${{ matrix.target }}/release/minigun${{ matrix.suffix }}
          README.md
          LICENSE
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
